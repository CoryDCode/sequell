# A list of Henzell command lines. The lg_testgen script uses these
# command lines to build a list of expected outputs. Implied nick when
# nick is omitted is 'hyperbolic'

# A simple command by itself tells the test runner that the command must
# return successfully, without specifying what output is required.
#
# A specific substring can be required as:
# !lg ::~ 2x OgFE
#
# An exact match can be required as:
# !lg thispersondoesnotexist ::= No games for thispersondoesnotexist.
#
# If the command will fail, that can be specified by prefixing with 'E'
# E !lg . malformed
#
# Any line starting with $ describes shell commands to run; the command will
# be echoed to stderr; the command exit code will not be checked.


$ rm dat/nicks-test.map
$ rm dat/user_commands.db
!nick cow ::= No nick mapping for cow.
!nick src a b c ::= Mapping src => a b c
!nick -rm src ::= Deleted src => a b c
!nick src cow tao moo ::= Mapping src => cow tao moo
!nick src zebra ::= Mapping src => cow tao moo zebra
!nick -rm src tao ::= Deleted tao from src => cow tao moo zebra
!nick LordSlothN LordSloth ::= Mapping lordslothn => lordsloth
!nick -rm LordSlothN ::= Deleted lordslothn => lordsloth

!lm * urune=3 type=rune x=avg(turn) ::~ avg\(turn\)=\d+

!lg * s=name,xl

!lg
!lg .
!lg -3
!lg . -2

!won itsmu be

!lm sebi type=~rune

!lg * ktyp=quitting|leaving s=name
!lg * killer =~kyrris

!lg * won race=de urune=15 s=skill

!lg * race=mu|gh|ds kaux=~shining x=dam max=dam

!lg * kaux=~holy max=dam x=dam

!lm marvinpa drie type=zig.exit place=zig:27

!lm * type=zig.exit place=zig:27 s=game_id

!lm * won type=br.enter cv>=0.5 s=-game_id

!lg * won cv>=0.5 s=char / end>=20101020 ?:%=1

!lg * s=name / won o=% ?:den.N>2

!log * xl>20 xl<24 cv>0.8 max=start

!lg * won race!=OM race!=GE race!=El race!=Gn race!=HD s=crace / name=Marvinpa ?:N=0

!lg . DEFE
!lg test
!hs * GhEn
!hs * !win -3
!lg * s=name
!lg * race=Gh s=name
!lg @78291 s=char
!lg * race=DS god=Xom ktyp=water
!lg * DS Xom drown
!lg * killer=uniq s=-killer
!lg * DS x=ckaux
!lg * !DS
!lg * ((xom || nemelex))
!lg * god=Xom|Nemelex
!lg * win min=turn
!lg * xl>20 min=turn

!lm * rune ktyp 1 -game
!lm * rune ktyp 1 -game -log
!lm * rune s=god

!lg * s=ktyp
!lg * s=ckiller
!lg qwqw D:10 -log

!lg * Vaults

!lg @78291 Zot 1 -log

!lm * orb min=turn -tv
!lm * orb min=turn -tv:>$
!lm * orb min=turn -tv:>>

!lm * rune=golden min=xl -tv


!lm * br.enter=Tomb -tv:<0:>20

!lm * rune=obsidian lg:place=Coc

# Argument with space:
!log . char=ddbe killer=electric golem

# Tourney selector:
!hs * ddbe when=t

# !log test:
!log * won char=mdee

E !gkills * deathonacow

!gkills

!lm * gid=WasJordan:cdo:20101130144401S s=char ::~ 10x NaCK

!lg * / win ?: N>1 ::~ games for \*:

!lg * s=name / win ?: N>20

!lg * won s=char x=min(start)

!gamesby elliptic

!deathsin Tomb

!killsby hobgoblin

!won elliptic 10

!streak elliptic

# Game is not a Xom or a Nemelex or a 0.10 game
!lg * !(xom|nemelex|0.10)

# Game is a quit / leave
!lg * quitting|leaving

# Killer is a hobgoblin or an imp (superfluous parens ignored)
!lg * killer=(hobgoblin|imp)
!lg * killer!=(hobgoblin|imp)

!lm crate t !ktyp s=rune

E !lg * won god=xom urune=15 sp -2

!lm * t9 won type=god.renounce x=cdist(gid)

!lg @elliptic t s=name x=sum(dur)

!chars elliptic

!kw boring quitting|leaving
!kw bore boring
!lg * !boring
!lg * !bore

!lg * day(end)=20121020
!lg * s=day(end)

!lg * s=year(end) -graph
!lg * s=month(end) x=max(xl) -graph

!lg * win s=cv -graph:pie
!lg * s=src -graph:pie

!lg * x=day(end),year(end)

!lg chris t xl>=9 x=cdist(crace),cdist(cls)
!lg * killer=Xtahua dam>0 s=dam o=-. -graph
!lg * shoals|swamp|snake s=br,xl -graph

!lg * 0.11 tiles xl>10 s=god% -graph
!lg * t s=god / win -graph


!lg theglow win -ttyrec

!lg * sc>0 s=log(sc) -graph
!lg * s=ndayofweek(end) -graph
!lg * s=trunc1000(sc) sc<100000
!lg * won start>=20120101 s=day(end),tiles -graph
E !lg * s=trunc99(sc)

!lg * s=day(end) x=sum(sc) / tiles -graph
!lg * day(end)=20121029 s=day(end) x=sum(sc) / tiles 

!lg * cv>=0.10 sc>0 s=log(sc),cv o=-. -graph:area
!lm * max=start
!lm * start>201001
!lm * x=start

!lg * char=hobe / won

!lg * s=tiles ::~ 175371x false
!lg * s=length(name)
!lg * x=max(length(name))
!lg * win s=sc
!lg elliptic win -ttyrec

!lg * ogee s=sklev,sk

!lg elliptic x=day(end)
!lg * playable s=char
!lg * playable:good s=char
!lg * playable:bad s=char
!lg * playable:sp s=sp
!lg * playable:job s=job

!lg * fe--
!lg * --fe
!lg * __he

!lg * v:1
!lg * s=src x=max(cv),max(v),min(cv),min(v)
!lg * x=max(trunc500(turn))
!lg * max=cv
!lg * labyrinth

!lg * win s=tiles,cv ::~ x false
!lg * x=max(dur)
!lg undermind win s=dur
!lg * Abyss:1
!lg * abyss
!lg * abyss:
!lg * abyss:*
!lg * x=avg(dur),max(dur),min(dur),sum(dur)
!lg . urune=3|4

!lg @:hugeterm
!lg :hugeterm
!lg * :hugeterm
!lg * @hugeterm

!lg * map|kmap!=
!lg * map&kmap!=
!lg * sprint map=pitsprint
!lg * map=pitsprint s=vault(map)
!lg * map=pitsprint s=subvault(map)
!lm elliptic !ktyp s=gid x=max(src)

!lm * god.abandon
!lm * uniq.pacify=Kirke
!lm * god.wor=Xom

!lg * s=char x=avg(turn) ::~ \d[.]\d
!lg * s=char x=avg(dur) ::~ \d{1,2}:\d{2}:\d{2}

!lg * ((cv=0.10 || cv=0.11-a)) ikiller!~'s ghost killer~~Duvessa s=ckiller
!lm elliptic s=uniq / won

!lg * !boring rstart>=2013 s=src x=cdist(name) / tiles

!cmd !lg* !lg *
!lg* @elliptic

!cmd !lgs !lg* sprint
!lgs @elliptic

!kw tmons killer=tentacled monstrosity
!lg * tmons ::~ a tentacled monstrosity
!lg * !tmons ::!~ a tentacled monstrosity

!lg * !((killer=tentacled monstrosity)) ::!~ a tentacled monstrosity

!kw dying !(boring|winning)
!lg * dying
!lg * name=. ::~ hyperbolic

!lg * s=cls start>=20130101 / tiles

!lm * !ktyp ::~ buki
!lg * status=berserk|hasted

!lg * size(maxsk)=1
!lg * win s=size(maxsk)
!lg * maxsk=fi maxsk=~, ::~ jeanjacques
!kw nondead ((boring || winning))

!lg * x=cdist(name) / won
