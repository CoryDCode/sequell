!!! 5
%html
  %head
    %meta(http-equiv="Content-Type"
          content="text/html; charset=UTF-8")
    %title User Defines
    %link(rel="stylesheet" type="text/css"
          href="userdef.css")

  %body
    %h1 Sequell User Definitions
    .subtext
      Updated #{Time.now.utc}

    %nav
      %a(href="#keywords") Keywords
      %a(href="#commands") Commands
      %a(href="#functions") Functions
      %a(href="#behaviours") Behaviours
      %a(href="#acls") ACLs

    %section.keywords
      %a(name="keywords")
      %h2 Keywords

      - if keywords.empty?
        .stub No keywords
      - else

        %table
          %colgroup
            %col(span="1" style="width: 15%")
            %col(span="1" style="width: 85%")

          %tr
            %th.name Keyword
            %th.def Definition

          - for keyword in keywords
            %tr
              %td.name
                %a{name: keyword[0]}
                #{keyword[0]}
              %td.def= keyword[1]

    %section.commands
      %a(name="commands")
      %h2 Commands

      - if commands.empty?
        .stub No commands
      - else

        %table
          %colgroup
            %col(span="1" style="width: 15%")
            %col(span="1" style="width: 85%")
          %tr
            %th Command
            %th Definition

          - for command in commands
            %tr
              %td.name
                %a{name: h(command[0])}
                #{h command[0]}
              %td.def= command[1]

    %section.functions
      %a(name="functions")
      %h2 Functions

      - if functions.empty?
        .stub No functions
      - else

        %table
          %colgroup
            %col(span="1" style="width: 15%")
            %col(span="1" style="width: 85%")
          %tr
            %th Function
            %th Definition

          - for function in functions
            %tr
              %td.name
                %a{name: h(function[0])}
                #{h function[0]}
              %td.def= function[1]

    %section.behaviours
      %a(name="behaviours")
      %h2 Behaviours
      .subtext
        Defined in the
        %code :beh:
        key in
        %a(href="learndb.html") the LearnDB
      - if behaviours.empty?
        .stub No behaviours
      - else

        %table
          %colgroup
            %col(span="1" style="width: 4em")
            %col(span="1" style="width: 15%")
            %col(span="1" style="width: 70%")
            %col(span="1" style="width: 15%")
          %tr
            %th &nbsp;
            %th Pattern
            %th Behaviour
            %th Next Step

          - behaviours.each_with_index do |beh, i|
            %tr
              %td.index= i + 1
              %td.name
                - if beh[0].nil?
                  %span.malformed (broken)
                - else
                  #{h beh[0]}
              %td.def= beh[1]
              %td.def= (beh[2] || '')

    %section.acls
      %a(name="acls")
      %h2 ACLs
      .subtext
        See the
        %a(href="https://github.com/greensnark/dcss_sequell/blob/master/docs/learndb.md#acls") ACL documentation
      - if acls.empty?
        .stub No ACLs
      - else
        %table
          %colgroup
            %col(span="1" style="width: 15%")
            %col(span="1" style="width: 85%")
          %tr
            %th ACL
            %th Definition
          - acls.each do |acl|
            %tr
              %td= acl[0]
              %td= acl[1]

    %section.groups
      %a(name="groups")
      %h2 Groups
      .subtext
        See the
        %a(href="https://github.com/greensnark/dcss_sequell/blob/master/docs/learndb.md#acls") ACL documentation
      - if groups.empty?
        .stub No groups.
      - else
        %table
          %colgroup
            %col(span="1" style="width: 15%")
            %col(span="1" style="width: 85%")
          %tr
            %th Group
            %th Members
          - groups.each do |group|
            %tr
              %td= group[0]
              %td= group[1]
